<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="14.2">
  <zoom_level>10</zoom_level>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>600</x>
      <y>60</y>
      <w>190</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>Class
--
Data Members
--
Methods
Constructors

transparency=1
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>600</x>
      <y>150</y>
      <w>310</w>
      <h>170</h>
    </coordinates>
    <panel_attributes>Timer
--
- executionTime : clock_t

--
+ startTimer() : void
+ stopTimer() : void
+ resetTimer() : void
+ displayTimerInformation() : void
+ getExecutionTimeInMicroseconds() : long
+Timer() : constructor

bg=#001CFF
transparency=1</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1320</x>
      <y>0</y>
      <w>350</w>
      <h>220</h>
    </coordinates>
    <panel_attributes>IntNode
--
- nodeData : int
- nodePointer : IntNode *

--
+ getNodeData() : int
+ getNodePointer() : IntNode *
+ setNodeData(int) : void
+ setNodePointer(IntNode *) : void

+ IntNode() : constructor
+ IntNode(int) : constructor
+ Intnode (int, IntNode *) : constructor

bg=#12FF00
transparency=1</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>600</x>
      <y>0</y>
      <w>190</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>Created by 
Jonah Tucker
bg=cyan
transparency=1</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>870</x>
      <y>0</y>
      <w>310</w>
      <h>150</h>
    </coordinates>
    <panel_attributes>IntNodeArray
--
- head : IntNode*
- size : int
--
+ IntNodeArray(int) : constructor
+ getSize() : int
+ getFromIndex(int) : int
+ setAtIndex(int index, int value) : void

bg=#179B0D
transparency=1
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>910</x>
      <y>220</y>
      <w>450</w>
      <h>250</h>
    </coordinates>
    <panel_attributes>Node&lt;Type&gt;
--
- nodeData : Type
- nodePointer: Node&lt;Type&gt; *
--
Construcutors
+ Node&lt;Type&gt;() : constructor
+ Node&lt;Type&gt;(Type value) : constructor
+ Node&lt;Type&gt;(Type value, Node&lt;Type&gt; * next) : constructor

Accessors

+ getNodeData() : Type
+ getNodePointer() : Node&lt;Type&gt;()
+ setNodeData(Type) : void
+ setNodePointer(Node&lt;Type&gt; *) : void

transparency=1
bg=#29FAED</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1170</x>
      <y>90</y>
      <w>170</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-
m2=1..n</panel_attributes>
    <additional_attributes>10.0;10.0;150.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1670</x>
      <y>0</y>
      <w>490</w>
      <h>250</h>
    </coordinates>
    <panel_attributes>Array &lt;Type&gt;
--
- front : Node&lt;Type&gt;*
- size : int
--
+ Array() : default constructor
+ Array&lt;Type&gt;(int size) : constructor

+ ~Array&lt;Type&gt;() : destructor
+ Array&lt;Type&gt;(const Array&lt;Type&gt; &amp; toBeCopied) : copy constructor

+ getSize() const : int
+ getFront() const : Node&lt;Type&gt;*

+ getFromIndex(int index) : Type
+ setAtIndex(int index, Type value) : void

transparency=1
bg=#00BFF</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1350</x>
      <y>230</y>
      <w>340</w>
      <h>50</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-
m2=1..n</panel_attributes>
    <additional_attributes>320.0;10.0;70.0;10.0;10.0;30.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1440</x>
      <y>250</y>
      <w>540</w>
      <h>290</h>
    </coordinates>
    <panel_attributes>Model :: List&lt;Type&gt;
--
- size : int
- front : Node&lt;Type&gt; *
- end : Node&lt;Type&gt; *
--
+ List&lt;Type&gt;() : constructor
+ List&lt;Type&gt;(const List&lt;Type&gt; &amp; source): copy constructor
+ ~List&lt;Type&gt; : destructor

+ addAtIndex(int index, Type Value) : void
+ addFront(Type value) : void
+ addEnd(Type value) : void
+ remove(int index) : Type
+ setAtIndex(int index, Type data) : Type 
+ getFromIndex(int index) : Type
+ contains(Type data) : bool
+ getSieze() const : int
+ getFront() const : Node&lt;Type&gt; *

transparency=1
bg=#4245f4</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1150</x>
      <y>460</y>
      <w>310</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-
m2=0..n</panel_attributes>
    <additional_attributes>290.0;40.0;10.0;40.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1020</x>
      <y>460</y>
      <w>30</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;70.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>910</x>
      <y>530</y>
      <w>530</w>
      <h>330</h>
    </coordinates>
    <panel_attributes>BiDirectionalNode&lt;Type&gt;
-
- nodeData : Type
- nextPointer : BiDirectionalNode&lt;Type&gt; *
- previousPointer : BiDirectionalNode&lt;Type&gt; *

-
Constructors
+ BiDirectionalNode&lt;Type&gt;() : constructor
+ BiDirectionalNode&lt;Type&gt;(Type value) : constructor
+ BiDirectionalNode&lt;Type&gt;(Type value, Node&lt;Type&gt; * next) : constructor

Accessors

- getNodeData() : Type
- getNextPointer() : Node&lt;Type&gt;()
- getPreviousPointer() : Node&lt;Type&gt;()
- setNodeData(Type) : void
- setNextPointer(Node&lt;Type&gt; *) : void
- set Previous Pointer(Node&lt;Type&gt; * ) : void

transparency=1
bg=#232487</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1700</x>
      <y>640</y>
      <w>640</w>
      <h>360</h>
    </coordinates>
    <panel_attributes>/DoublelyLinkedList&lt;Type&gt;/
-
- size : int
- front: BiDirectionalNode&lt;Type&gt; *
- end : BiDirectionalNode&lt;Type&gt; *
-
Non-virtual methods
+ getSize() const : int
+ getFront const : BiDirectionalNode&lt;Type&gt; *
+ getEnd() const : BiDirectionalNode&lt;Type&gt; *

Virtual methods
+ add()


transparency=1
bg=#42f4ee</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1430</x>
      <y>810</y>
      <w>290</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-
m2=0..n</panel_attributes>
    <additional_attributes>270.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>0</x>
      <y>20</y>
      <w>100</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>SimpleClass</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1740</x>
      <y>1090</y>
      <w>130</w>
      <h>110</h>
    </coordinates>
    <panel_attributes>Queue
transparency=1</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1950</x>
      <y>1170</y>
      <w>140</w>
      <h>110</h>
    </coordinates>
    <panel_attributes>transparency=1</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2150</x>
      <y>1080</y>
      <w>150</w>
      <h>110</h>
    </coordinates>
    <panel_attributes>CircularlyLinkedList

transparency=1</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>0</x>
      <y>20</y>
      <w>110</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>lt=&lt;.
&lt;&lt;instanceOf&gt;&gt;</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;60.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>0</x>
      <y>20</y>
      <w>110</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>lt=&lt;.
&lt;&lt;instanceOf&gt;&gt;</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;60.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1790</x>
      <y>990</y>
      <w>230</w>
      <h>120</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>210.0;10.0;10.0;100.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2000</x>
      <y>990</y>
      <w>30</w>
      <h>200</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;180.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2040</x>
      <y>990</y>
      <w>200</w>
      <h>110</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>10.0;10.0;180.0;90.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>600</x>
      <y>0</y>
      <w>1740</w>
      <h>1280</h>
    </coordinates>
    <panel_attributes>bg=black
transparency=20</panel_attributes>
    <additional_attributes/>
  </element>
</diagram>
